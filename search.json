[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/2023-04-12-la.html",
    "href": "posts/2023-04-12-la.html",
    "title": "Laplace Approximation",
    "section": "",
    "text": "try:\n  import jax\nexcept ModuleNotFoundError:\n  %pip install jaxlib jax\n  import jax\nimport jax.numpy as jnp\ntry:\n  import tensorflow_probability.substrates.jax as tfp\nexcept ModuleNotFoundError:\n  %pip install tensorflow-probability\n  import tensorflow_probability.substrates.jax as tfp\nimport matplotlib.pyplot as plt\nimport warnings\nimport seaborn as sns\nfrom tqdm import trange\nimport logging\nlogger = logging.getLogger()\nclass CheckTypesFilter(logging.Filter):\n    def filter(self, record):\n        return \"check_types\" not in record.getMessage()\n\n\nlogger.addFilter(CheckTypesFilter())"
  },
  {
    "objectID": "posts/2023-04-12-la.html#computing-hessian-and-covariance",
    "href": "posts/2023-04-12-la.html#computing-hessian-and-covariance",
    "title": "Laplace Approximation",
    "section": "Computing Hessian and Covariance",
    "text": "Computing Hessian and Covariance\n\nhessian = jax.hessian(neg_logjoint)(theta_map)\nhessian = jnp.reshape(hessian, (1, 1))\ncov = jnp.linalg.inv(hessian)\ncov\n\nDeviceArray([[0.00208645]], dtype=float32)\n\n\n\nPlots Comparing the distribution obtained using Laplace approximation with actual Beta Bernoulli posterior\n\nx = jnp.linspace(0, 1, 100)\nx = x.reshape(-1, 1)\nLaplace_Approx = tfp.distributions.MultivariateNormalFullCovariance(\n    loc=theta_map, covariance_matrix=cov\n)\nLaplace_Approx_pdf = Laplace_Approx.prob(x)\nplt.plot(x, Laplace_Approx_pdf, label=\"Laplace Approximation\")\n\nalpha = 3\nbeta = 5\ntrue_posterior = tfp.distributions.Beta(alpha + nH, beta + nT)\ntrue_posterior_pdf = true_posterior.prob(x)\nplt.plot(x, true_posterior_pdf, label=\"True Posterior\")\nplt.xlim(0, 1)\nplt.legend()\n\n<matplotlib.legend.Legend at 0x7f2181895a10>\n\n\n\n\n\n\n# Using log_prob\ntrue_posterior_pdf_log = true_posterior.log_prob(x)\nLaplace_Approx_pdf_log = Laplace_Approx.log_prob(x)\nplt.plot(x, Laplace_Approx_pdf_log, label=\"Laplace Approximation\")\nplt.plot(x, true_posterior_pdf_log, label=\"True Posterior\")\nplt.legend()\n\n<matplotlib.legend.Legend at 0x7f2180719250>"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nApr 15, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nApr 12, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLaplace Approximation\n\n\n\n\n\n\n\nLaplace Approximation\n\n\nML\n\n\n\n\nImplementing Laplace Approximation in JAX\n\n\n\n\n\n\nMar 28, 2023\n\n\nMadhav Kanda\n\n\n\n\n\n\nNo matching items"
  }
]